# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  paths:
    include:
    - principal-pipeline.yml
    - bicep-templates/*
    - main.bicep
    - bicep-templates

variables:
  # Azure Resource Manager connection created during pipeline creation
  #azureServiceConnectionId: 'Service_connection'
  - template:  pipelines\vars\vars.yml  
pool:
  #vmImage: ubuntu-latest
  vmImage: windows-latest
stages:
- template: 'pipelines\infraestructure-stage.yml'
  parameters:
    azureSubscription: $(azureSubscription)


- template: 'pipelines\webapp-stage.yml'
  parameters:
    azureSubscription: $(azureSubscription)
    resourceGroup: $(appResourceGroupName)
    pythonVersion: $(pythonVersion)
    tagValue: $(tagValue)
    dependsOn: deploy_infrastructure
    
- template: 'pipelines\function-stage.yml'
  parameters:
    azureSubscription: $(azureSubscription)
    resourceGroup: $(funcResourceGroupName)
    pythonVersion: $(pythonVersion)
    tagValue: $(tagValue)
    dependsOn: deploy_infrastructure

- template: 'pipelines\aks-permissions-stage.yml'
  parameters:
    azureSubscription: $(azureSubscription)
    aksclusterName: $(aksclusterName)
    useGrafana: $(useGrafana)
    dependsOn: deploy_infrastructure

- template: 'pipelines\aks-stage.yml'
  parameters:
    azureSubscription: $(azureSubscription)
    aksclusterName: $(aksclusterName)
    tagValue: $(tagValue)
    resourceGroupName: $(aksResourceGroupName)
    appImageName: $(appImageName)
    prometheusExporterImageName: $(prometheusExporterImageName)
    dependsOn: set_aks_permissions
  
- template: 'pipelines\sql-stage.yml'
  parameters:
    azureSubscription: $(azureSubscription)
    tagValue: $(tagValue)
    DatabaseName: $(databaseName)
    Username: $(sqlUserName)
    Password: $(sqlPassword)
    resourceGroupName: $(sqlResourceGroupName)
    dependsOn: deploy_infrastructure
  