parameters:
- name: azureSubscription
  type: string

- name: stageName
  type: string

- name: resourceGroup
  type: string

- name: aksUrl
  type: string
  default: "app.local"

- name: deploy
  type: boolean

- name: dependsOn
  type: string
  default: ""

- name: sqlPassword
  type: string

- name: sqlUserName
  type: string

- name: databaseName
  type: string    

stages:

- stage: Add_Webapp_Env_Vars
  displayName: push url env vars to azure webapp
  dependsOn : ${{parameters.dependsOn}}
  pool:
    vmImage: 'ubuntu-latest'
  jobs :
    - job: Add_Webapp_Env_Vars
      condition: eq('${{parameters.deploy}}', 'True')
      variables:
        projectRoot: '$(System.DefaultWorkingDirectory)'
      steps:
# Downloading the artifact that contains the data used inside the Azure Function
        - download: current
          artifact: ${{ parameters.stageName }}
# Putting the data used inside the Azure Function inside variables so it can be used later
        - bash: |
              sudo apt-get install dos2unix -y
              dos2unix $(Pipeline.Workspace)/${{parameters.stageName}}/funcUrl $(Pipeline.Workspace)/${{parameters.stageName}}/funcUrl
              dos2unix $(Pipeline.Workspace)/${{parameters.stageName}}/funcKey $(Pipeline.Workspace)/${{parameters.stageName}}/funcKey
              dos2unix $(Pipeline.Workspace)/${{parameters.stageName}}/fullyQualifiedDomainName $(Pipeline.Workspace)/${{parameters.stageName}}/fullyQualifiedDomainName
              dos2unix $(Pipeline.Workspace)/${{parameters.stageName}}/appName $(Pipeline.Workspace)/${{parameters.stageName}}/appName
              dos2unix $(Pipeline.Workspace)/${{parameters.stageName}}/aksIp $(Pipeline.Workspace)/${{parameters.stageName}}/aksIp
              fullyQualifiedDomainName=$(cat $(Pipeline.Workspace)/${{parameters.stageName}}/fullyQualifiedDomainName)
              funcUrl=$(cat $(Pipeline.Workspace)/${{parameters.stageName}}/funcUrl)
              funcKey=$(cat $(Pipeline.Workspace)/${{parameters.stageName}}/funcKey)
              aksIp=$(cat $(Pipeline.Workspace)/${{parameters.stageName}}/aksIp)
              webAppName=$(cat $(Pipeline.Workspace)/${{parameters.stageName}}/appName)
              echo "##vso[task.setvariable variable=fullyQualifiedDomainName]$fullyQualifiedDomainName"
              echo "##vso[task.setvariable variable=funcKey]$funcKey"
              echo "##vso[task.setvariable variable=funcUrl]$funcUrl"
              echo "##vso[task.setvariable variable=webAppName]$webAppName"
              echo "##vso[task.setvariable variable=aksIp]$aksIp"
              echo $funcKey
# Putting the data used inside the Azure Function in entorn variables inside the Azure Function
        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.azureSubscription }} 
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az webapp config appsettings set -g ${{ parameters.resourceGroup }} -n $(webAppName) --settings "sql_url=$(fullyQualifiedDomainName)" "func_code=$(funcKey)" "func_url=$(funcUrl)" "aks_url=${{ parameters.aksUrl }}" "aks_ip=$(aksIp)" "sql_password=${{ parameters.sqlPassword }}" "sql_username=${{ parameters.sqlUserName }}" "sql_name=${{ parameters.databaseName }}"
