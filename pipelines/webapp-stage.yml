parameters:
- name: azureSubscription
  type: string

- name: resourceGroup
  type: string
  
- name: pythonVersion
  type: string

- name: tagValue
  type: string

- name: dependsOn
  type: string
  default: ''  

stages:

- template: './get-name-stage.yml'
  parameters:
    azureSubscription: ${{parameters.azureSubscription}}
    resourceGroup: ${{parameters.resourceGroup}}
    tagValue:  ${{parameters.tagValue}}
    dependsOn: ${{parameters.dependsOn}}
    resoucType: "microsoft.web/sites"

- stage: deploy_webapp_content
  displayName: push webapp code to azure webapp
  dependsOn : get_resource_name
  pool:
    vmImage: 'ubuntu-latest'
  jobs :
    - job: deploy_webapp_content
      variables:
        projectRoot: '$(System.DefaultWorkingDirectory)'
      steps:

        - download: current
          artifact: variables

        - bash: |
            sudo apt-get install dos2unix -y
            dos2unix $(Pipeline.Workspace)/variables/resourceName $(Pipeline.Workspace)/variables/resourceName
            webAppName=$(cat $(Pipeline.Workspace)/variables/resourceName)
            echo "##vso[task.setvariable variable=webAppName]$webAppName"
    # Just like in the first example, we can expand the variable within Azure Pipelines itself


        - task: UsePythonVersion@0
          displayName: 'Use Python ${{parameters.pythonVersion}}'
          inputs:
            versionSpec: '${{parameters.pythonVersion}}'
        - script: |
            python -m venv antenv
            source antenv/bin/activate
            python -m pip install --upgrade pip
            pip install setup
            pip install -r requirements.txt
          workingDirectory: $(projectRoot)/content/webapp-content
          displayName: "Install requirements"

        - task: ArchiveFiles@2
          displayName: 'Archive files'
          inputs:
            rootFolderOrFile: '$(projectRoot)/content/webapp-content'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip
            replaceExistingArchive: true

        - upload: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip
          displayName: 'Upload package'
          artifact: drop-webapp
        
        - task: AzureWebApp@1
          displayName: 'Deploy Azure Web App : webapppython43'
          inputs:
            azureSubscription: ${{parameters.azureSubscription}}
            appName: $(webAppName)
            package: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip