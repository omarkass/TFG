parameters:
- name: azureSubscription
  type: string

- name: resourceGroup
  type: string
  
- name: pythonVersion
  type: string

- name: tagValue
  type: string

- name: dependsOn
  type: string
  default: ''  

- name: type
  type: string
  
stages:

- template: './get-name-stage.yml'
  parameters:
    azureSubscription: ${{ parameters.azureSubscription }}
    resourceGroup: ${{ parameters.resourceGroup }}
    resoucType: "Microsoft.Web/sites"
    tagValue: ${{ parameters.tagValue }}

- stage: secondstage
  jobs:
    - job: secondjob
      pool:
        vmImage: 'Ubuntu-latest'
      steps:

        # Download the artifacts
        - download: current
          artifact: variables

        # Read the variable from the file, then expose it in the job
        - bash: |
            #vi $(Pipeline.Workspace)/variables/FOO
            #:setlocal ff=unix
            #:wq!
            sudo apt-get install dos2unix -y
            dos2unix $(Pipeline.Workspace)/variables/FOO $(Pipeline.Workspace)/variables/FOO
            FOO=$(cat $(Pipeline.Workspace)/variables/FOO)
            echo "##vso[task.setvariable variable=FOO]$FOO"

        # Just like in the first example, we can expand the variable within Azure Pipelines itself
        - bash: |
            echo "$(FOO)"

        # Or we can expand it within bash, reading it as environmental variable
        - bash: |


- stage: deploy_webapp_content
  displayName: push webapp code to azure webapp
  dependsOn : ${{parameters.dependsOn}}
  jobs :
  - job: deploy_webapp_content
    variables:
      projectRoot: '$(System.DefaultWorkingDirectory)'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python ${{parameters.pythonVersion}}'
        inputs:
          versionSpec: '${{parameters.pythonVersion}}'
      - script: |
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install setup
          pip install -r requirements.txt
        workingDirectory: $(projectRoot)/content/webapp-content
        displayName: "Install requirements"

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(projectRoot)/content/webapp-content'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip
          replaceExistingArchive: true

      - upload: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip
        displayName: 'Upload package'
        artifact: drop-webapp
      
      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : webapppython43'
        inputs:
          azureSubscription: ${{parameters.azureSubscription}}
          appName: $(webAppName)
          package: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip