# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
  - name: resourceGroup
    type: string
    default: "proj-dev-func-rg"
    

  - name: resoucType
    type: string

    
  - name: tagValue
    type: string
    default: "proj"

  - name: dependsOn
    type: string
    default: ''  
    
  - name: azureSubscription
    type: string

  - name: stageName
    type: string

stages:

  - stage: ${{parameters.stageName}}
    dependsOn : ${{parameters.dependsOn}}
    jobs:

      - job: ${{parameters.stageName}}
        pool:
          vmImage: 'windows-latest'
        steps:
        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.azureSubscription }}
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              $resources = $(az resource list --tag deployedby="${{parameters.tagValue}}" ) | ConvertFrom-json
              foreach( $resource in $resources  ) { 
               if($resource.type -eq "${{parameters.resoucType}}" -and $resource.resourceGroup -eq "${{parameters.resourceGroup}}")
               {
               mkdir -p $(Pipeline.Workspace)/${{parameters.stageName}}
               echo $resource.name > $(Pipeline.Workspace)/${{parameters.stageName}}/resourceName
               if ($resource.type -eq "Microsoft.ContainerRegistry/registries"){
                $info = $(az acr show --name $resource.name --resource-group $resource.resourceGroup) | convertFrom-json
                echo $info.loginServer > $(Pipeline.Workspace)/${{parameters.stageName}}/acrUrl
                echo $info.loginServer 
                echo $resource.name
               }
               }
               }
        - publish: $(Pipeline.Workspace)/${{parameters.stageName}}
          artifact: ${{parameters.stageName}}
