
parameters:
- name: databaseName
  type: string
  

- name: userName
  type: string

- name: password
  type: string

- name: azureSubscription
  type: string


- name: resourceGroupName
  type: string  

- name: tagValue
  type: string

- name: stageName
  type: string  
  default: 'get_sql_info'

- name: dependsOn
  type: string
  default: ''  

stages:

- template: './get-name-stage.yml'
  parameters:
    azureSubscription: ${{parameters.azureSubscription}}
    resourceGroup: ${{parameters.resourceGroupName}}
    tagValue:  ${{parameters.tagValue}}
    dependsOn: ${{parameters.dependsOn}}
    resoucType: "Microsoft.Sql/servers"
    stageName: ${{ parameters.stageName }}

- stage: deploy_sql_content
  displayName: create and push sql database
  dependsOn: ${{ parameters.stageName }}
  jobs :
  - job: deploy_sql_content
    steps:

    - download: current
      artifact: ${{ parameters.stageName }}

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $serverFqdn = $(Get-Content $(Pipeline.Workspace)/${{parameters.stageName}}/serverFqdn -Raw)
          $serverName = $(Get-Content $(Pipeline.Workspace)/${{parameters.stageName}}/resourceName -Raw)
          echo "##vso[task.setvariable variable=serverName]$serverName"
          echo "##vso[task.setvariable variable=serverFqdn]$serverFqdn"


    #open the firewall of the sql server 
    - task: AzurePowerShell@5
      displayName: open sql server firewall
      inputs:
        azureSubscription: ${{parameters.azureSubscription}}
        ScriptPath: './content/sql-content/set-azure-firewall-rule1.ps1'
        ScriptArguments: "-ServerName $(serverName) -ResourceGroup ${{ parameters.resourceGroupName }}"
        azurePowerShellVersion: LatestVersion

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
          ls
          pwd
          ls ./content/sql-content/database.sql
    #$(Build.SourcesDirectory)/content/sql-content\database.sql      
    #execute the sql script
    - task: CmdLine@1
      displayName: execute sql script
      inputs:
        filename: Sqlcmd
        arguments: '-S $(serverFqdn) -U ${{parameters.userName}} -P ${{parameters.password}} -d ${{parameters.databaseName}} -i ./content/sql-content/database.sql'

    #close the sql firewall
    - task: AzurePowerShell@5
      displayName: close sql server firewall
      inputs:
        azureSubscription: ${{parameters.azureSubscription}}
        ScriptPath: './content/sql-content/remove-azure-firewall1.ps1'
        ScriptArguments: "$(serverName) -ResourceGroup ${{parameters.resourceGroupName}}"
        azurePowerShellVersion: LatestVersion


