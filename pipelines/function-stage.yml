parameters:
- name: azureSubscription
  type: string

- name: functionAppName
  type: string
  
- name: pythonVersion
  type: string

stages:
- stage: deploy_function_content
 - job: azure_function_content
    variables:
      vmImageName: 'ubuntu-latest'
      workingDirectory: './content/function-content'
    steps:
      - bash: |
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
          fi
        workingDirectory: $(workingDirectory)
        displayName: 'Build extensions'

      - task: UsePythonVersion@0
        displayName: 'Use Python ${{parameters.pythonVersion}}'
        inputs:
          versionSpec: '${{parameters.pythonVersion}}'

      - bash: |
          pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
        workingDirectory: $(workingDirectory)
        displayName: 'Install application dependencies'

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(workingDirectory)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/${{functionAppName}}-$(Build.BuildId).zip
          replaceExistingArchive: true

      - publish: $(Build.ArtifactStagingDirectory)/${{functionAppName}}-$(Build.BuildId).zip
        artifact: drop-function


      - task: AzureFunctionApp@1
        displayName: 'Azure functions app deploy'
        inputs:
          azureSubscription: '$(azureSubscription)'
          appType: functionAppLinux
          appName: ${{functionAppName}}
          package: $(Build.ArtifactStagingDirectory)/${{functionAppName}}-$(Build.BuildId).zip