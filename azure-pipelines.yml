# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


variables:
  # Azure Resource Manager connection created during pipeline creation
  #azureServiceConnectionId: 'ad39f181-531d-47fd-b9dc-1b0488bcaa1d'
  azureSubscription: 'ad39f181-531d-47fd-b9dc-1b0488bcaa1d'
pool:
  vmImage: ubuntu-latest
stages:
- stage: deploy_infrastructure
  jobs :
  - job: "arm_execution"
    variables:
        LOCATION: 'northeurope'
    steps:
     - task: AzureCLI@2
       inputs:
          azureSubscription: $(azureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment sub create  --template-file './main.bicep' --location $LOCATION 
- stage: "infrastructure_content" 
  dependsOn:
  - deploy_infrastructure
  jobs:
  - job: service_app_content
    variables:
      projectRoot: '$(System.DefaultWorkingDirectory)'
      pythonVersion: '3.9'
      webAppName : 'proj-dev-app'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python $(pythonVersion)'
        inputs:
          versionSpec: '$(pythonVersion)'
      - script: |
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install setup
          pip install -r requirements.txt
        workingDirectory: $(projectRoot)/content/webapp-content
        displayName: "Install requirements"

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(projectRoot)/content/webapp-content'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip
          replaceExistingArchive: true

      - upload: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip
        displayName: 'Upload package'
        artifact: drop
      
      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : webapppython43'
        inputs:
          azureSubscription: $(azureSubscription)
          appName: $(webAppName)
          package: $(Build.ArtifactStagingDirectory)/$(webAppName)-$(Build.BuildId).zip

  - job: azure_function_content
    variables:
      azureSubscription: 'ad39f181-531d-47fd-b9dc-1b0488bcaa1d'
      functionAppName: 'proj-dev-func'
      vmImageName: 'ubuntu-latest'
      workingDirectory: './content/function-content'
    steps:
      - bash: |
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
          fi
        workingDirectory: $(workingDirectory)
        displayName: 'Build extensions'

      - task: UsePythonVersion@0
        displayName: 'Use Python 3.9'
        inputs:
          versionSpec: 3.9 

      - bash: |
          pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
        workingDirectory: $(workingDirectory)
        displayName: 'Install application dependencies'

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(workingDirectory)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(functionAppName)-$(Build.BuildId).zip
          replaceExistingArchive: true

      - publish: $(Build.ArtifactStagingDirectory)/$(functionAppName)-$(Build.BuildId).zip
        artifact: drop


      - task: AzureFunctionApp@1
        displayName: 'Azure functions app deploy'
        inputs:
          azureSubscription: '$(azureSubscription)'
          appType: functionAppLinux
          appName: $(functionAppName)
          package: $(Build.ArtifactStagingDirectory)/$(functionAppName)-$(Build.BuildId).zip