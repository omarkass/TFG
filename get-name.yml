# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger: none

variables:
  # Azure Resource Manager connection created during pipeline creation
  #azureServiceConnectionId: 'Service_connection'
  - template:  pipelines\vars\vars.yml  
pool:
  vmImage: ubuntu-latest

stages:

- stage: STAGE_X
  jobs:
  - job: STAGE_X_JOB_A
    steps:
    - task: AzureCLI@2
      name: ValidateVar
      inputs:
        azureSubscription: 'Service_connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "azure cli"
          pwd
          ls
          export  PARAM_X=$(az resource list)
          echo $PARAM_X
          echo "##vso[task.setvariable variable=VarKey;isOutput=true]$PARAM_X"
    - checkout: none
   # - script: |
   #     ls -l
   #     echo "This is job STAGE_X_JOB_A. Lets set the value"
   #     export PARAM_X=$(ls -l)
   #     echo "##vso[task.setvariable variable=VarKey;isOutput=true]$PARAM_X"
   #     echo $(PARAM_X)
   #     echo $PARAM_X
   #   name: ValidateVar
    - script: |
        echo "Key Value :"
        echo "$(ValidateVar.VarKey)"
      name: Print_Key_value
  - job: STAGE_X_JOB_B
    dependsOn: STAGE_X_JOB_A
    #condition: eq(dependencies.STAGE_X_JOB_A.outputs['ValidateVar.VarKey'], 'TEST')
    steps:
    - checkout: none
    - script: |
        echo "This is job STAGE_X_JOB_B and will run as per the valid condition"
      displayName: Print Details
- stage: STAGE_Y
  dependsOn: STAGE_X
  jobs:
  - job: STAGE_Y_JOB_B
    #condition: eq(stageDependencies.STAGE_X.STAGE_X_JOB_A.outputs['ValidateVar.VarKey'], 'TEST') 
    variables:
      varFromStageA: $[ stageDependencies.STAGE_X.STAGE_X_JOB_A.outputs['ValidateVar.VarKey'] ]
    steps:
    - checkout: none
    - script: |
        echo "This Job will print value from Stage STAGE_X"
        echo "$(varFromStageA)"
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo "function here what is going on"
          echo "${varFromStageA}"