# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger: none

variables:
  # Azure Resource Manager connection created during pipeline creation
  #azureServiceConnectionId: 'Service_connection'
  - template:  pipelines\vars\vars.yml  

pool:
 vmImage: windows-latest

stages:

- stage: DeployDev

  displayName: Deploy template to dev environment
  jobs:
    - job: DeployResources
      steps:
      - task: PowerShell@2
        displayName: 'Set outputs'
        name: SetOutputs
        inputs:
          targetType: inline
          script: |
            Write-Host $env:MAINDEPLOYMENTS_OUTPUTS
            $armOutputObj = $(dir)
            Write-Host $armOutputObj

            $kubeletPrincipalId = $armOutputObj

            Write-Host "kubeletPrincipalId:"
            Write-Host $kubeletPrincipalId
           

- stage: DeployProd

  variables:
  - name: devKubeletPrincipalId 
    value: $[ stageDependencies.DeployDev.DeployResources.outputs['DeployResources.SetOutputs.kubeletPrincipalId'] ]

  displayName: Deploy template to prod environment
  jobs:
  - job: STAGE_A_JOB_B
    steps:

    - task: AzureCLI@2
      displayName: Role assignments on ACR
      inputs:
        azureSubscription: ${{ variables.ProdAzureResourceManagerConnection }}
        scriptType: pscore
        scriptLocation: inlineScript
        addSpnToEnvironment: true
        inlineScript: |

          write-host $(devKubeletPrincipalId)

