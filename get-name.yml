# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger: none

variables:
  # Azure Resource Manager connection created during pipeline creation
  #azureServiceConnectionId: 'Service_connection'
  - template:  pipelines\vars\vars.yml  
pool:
  vmImage: ubuntu-latest

stages:

- stage: One
  jobs:
  - job: A
    steps:
    - task: Bash@3  # this step generates the output variable
    - script: |
        echo "This is job STAGE_X_JOB_A. Lets set the value"
        export PARAM_X="TEST"
        echo "##vso[task.setvariable variable=VarKey;isOutput=true]$PARAM_X"
      name: ProduceVar  # because we're going to depend on it, we need to name the step
- stage: Two
  jobs:
  - job: B
    variables:
      # map the output variable from A into this job
      varFromA: $[ stageDependencies.One.A.outputs['ProduceVar.PARAM_X'] ]
    steps:
    - script: echo $(varFromA) # this step uses the mapped-in variable

            